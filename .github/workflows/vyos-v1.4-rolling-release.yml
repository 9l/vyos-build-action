name: VyOS v1.4 Rolling Release

on:
  schedule:
    - cron: 0 3 * * *
  create:
  push:
  workflow_dispatch:
  

env:
  GIT_CLONE_URL: https://github.com/vyos/vyos-build
  THIS_REPO: https://github.com/b-/vyos-build-action
  BRANCH: current
  ARCHITECTURE: amd64
  BUILD_BY: vyos-build-action@github.com
  BUILD_TYPE: release
  VERSION: 1.4-rolling
  DEBIAN_MIRROR: http://ftp.us.debian.org/debian/

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: vyos/vyos-build:current
      options: --workdir /vyos --privileged

    steps:
      - name: Clone source code
        run: |
          git clone -b $BRANCH --single-branch $GIT_CLONE_URL
          git clone --single-branch --recursive $THIS_REPO

      - name: Prepare #from vyos-tailscale/Makefile:prepare
        run: |
          cp vyos-build-action/vyos-tailscale/tailscale/tailscale.gpg /tmp/tailscale.gpg

          mkdir -p vyos-build/data/live-build-config/includes.chroot/etc/default
          cp vyos-build-action/vyos-tailscale/tailscale/tailscaled vyos-build/data/live-build-config/includes.chroot/etc/default/tailscaled

          mkdir -p vyos-build/data/live-build-config/includes.chroot/etc/systemd/system/tailscaled.service.d
          cp vyos-build-action/vyos-tailscale/tailscale/override.conf vyos-build/data/live-build-config/includes.chroot/etc/systemd/system/tailscaled.service.d/override.conf
      
      - name: Build ISO
        working-directory: ./vyos-build
        run: |
          sudo ./build-vyos-image iso --architecture $ARCHITECTURE --build-by $BUILD_BY --build-type $BUILD_TYPE --version $VERSION-$(date +%Y%m%d%H%M) --custom-apt-key /tmp/tailscale.gpg --custom-apt-entry "deb https://pkgs.tailscale.com/stable/debian bullseye main" --custom-package "tailscale" --build-comment "VyOS with Tailscale" --build-type release --version 1.4-rolling-`date +%Y%m%d%H%M`_tailscale
          ln -s build/vyos-${{ env.VERSION }}-*.iso build/vyos-${{ env.VERSION }}-latest.iso
          
          #TODO: add minisign

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso
          path: vyos-build/build/vyos-${{ env.VERSION }}-*.iso

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso
          path: vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso

      - name: Upload release asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          asset=$(find ./vyos-${{ env.VERSION }}-${{ env.ARCHITECTURE }}-iso/ -name "vyos-${{ env.VERSION }}-*.iso" | xargs)
          tag_name="v${{ env.VERSION }}"
          hub release edit -a "$asset" -m "" "$tag_name"

  delete_old_workflow_runs:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Delete old workflow runs
        uses: GitRML/delete-workflow-runs@main
        with:
          retain_days: 31
